plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.2.2.RELEASE' apply false
    id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1'
    id 'io.freefair.lombok' version '4.1.5'
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    group = 'everest.engineering.starter.kit'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'io.freefair.lombok'

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    repositories {
        jcenter()
    }

    ext {
        springBootVersion = '2.2.2.RELEASE'
        axonVersion = '4.2'
        commonsLangVersion = '3.9'
        commonsValidatorVersion = '1.6'
        swaggerVersion = '2.9.2'
        ehCacheVersion = '3.8.1'
        kubernetesClientVersion = '6.0.1'
        guavaVersion = '28.1-jre'
        hazelcastVersion = '3.11.4'
        hazelcastKubernetesVersion = '1.5.2'
        jodaTimeVersion = '2.10.4'
        javaXCacheVersion = '1.1.1'
        javaXPersistenceVersion = '2.2'
        postgresDriverVersion = '42.2.8'
        thumbnailatorVersion = '0.4.8'
        bouncyCastleVersion = '1.64'
        microMeterPrometheusRegistry = '1.3.1'
        prometheusPushGateway = '0.8.0'
        aspectjVersion = '1.9.4'
        jjwtVersion = '0.10.7'
        commonsTextVersion = '1.8'
        awsSdkVersion = '1.11.705'

        junitVersion = '5.5.2'
        hamcrestVersion = '2.1'
        mockitoVersion = '2.23.0'
        h2Version = '1.4.199'
        flapDoodleMongoVersion = '2.2.0'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    lombok {
        version = "1.18.10"
        generateLombokConfig.enabled = false
    }

    checkstyle {
        toolVersion = '8.24'
        maxWarnings = 0
        configFile = file("${project.rootDir}/build-config/checkstyle/checkstyle.xml")
        sourceSets = [sourceSets.main]
    }

    pmd {
        toolVersion = '6.17.0'
        incrementalAnalysis = true
        ruleSets = []
        ruleSetFiles = files("${project.rootDir}/build-config/pmd/pmd-ruleset.xml")
        sourceSets = [sourceSets.main]
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "skipped", "failed"
        }
    }

    tasks.withType(JavaCompile) {
        options.deprecation = true
    }
}
